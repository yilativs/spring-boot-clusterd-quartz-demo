#will start on random port in a given range
server.port: ${random.int(8001,8010)}


spring.datasource.url=jdbc:postgresql://localhost:5432/quartz_demo
spring.datasource.username=demo
spring.datasource.password=demoSecret

spring.flyway.enabled=true
#flyway requires to mention all schemas, the first one will be the one where it stores it's history table
spring.flyway.schemas=public,demo
#if not set to false, flyway will try to create schema
spring.flyway.create-schemas=false

#see https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#features.quartz
spring.quartz.job-store-type=jdbc

#possible values are always|never - in prod use never and prepare a liquibase script for that
spring.quartz.jdbc.initialize-schema=never

#think twice if you need it
#By default, jobs created by configuration will not overwrite already registered jobs that have been read from a persistent job store. To enable overwriting existing job definitions set the 
spring.quartz.overwrite-existing-jobs=true

#see https://www.quartz-scheduler.org/documentation/quartz-2.3.0/configuration/
#schema to use by quartz
#spring.quartz.jdbc.schema=quartz
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO

#max number of threads quartz will use 
spring.quartz.properties.org.quartz.threadPool.threadCount=9
#Set the frequency (in milliseconds) at which this instance "checks-in" with the other instances of the cluster. Affects the quickness of detecting failed instances.
#spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=5000

#If the value of this property is set to > 1, and JDBC JobStore is used, then the acquireTriggersWithinLock must be set to true to avoid data corruption.
#org.quartz.scheduler.batchTriggerAcquisitionMaxCount=4
#spring.quartz.properties.org.quartz.jobStore.acquireTriggersWithinLock=true

